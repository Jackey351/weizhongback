// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-04-21 19:34:26.119944729 +0800 CST m=+0.131989898

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "YANFEI API",
        "contact": {},
        "license": {},
        "version": "0.0.1"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "测试服务器是否在线",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "miscellaneous"
                ],
                "summary": "PING-PONG",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controller.Message"
                        }
                    }
                }
            }
        },
        "/wx/info/project_types": {
            "get": {
                "description": "获取所有工程类别",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wx"
                ],
                "summary": "获取所有工程类别",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controller.Message"
                        }
                    }
                }
            }
        },
        "/wx/info/worker_types": {
            "get": {
                "description": "获取所有工种",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wx"
                ],
                "summary": "获取所有工种",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controller.Message"
                        }
                    }
                }
            }
        },
        "/wx/user/new_user": {
            "post": {
                "description": "小程序端新添用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wx",
                    "user"
                ],
                "summary": "小程序端新添用户",
                "parameters": [
                    {
                        "description": "create a new user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.WxUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controller.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.Message": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.WxUser": {
            "type": "object",
            "properties": {
                "hometown": {
                    "type": "string",
                    "example": "江苏"
                },
                "nick_name": {
                    "type": "string",
                    "example": "飞燕一号"
                },
                "phone": {
                    "type": "string",
                    "example": "133333"
                },
                "real_name": {
                    "type": "string",
                    "example": "张三"
                },
                "role": {
                    "type": "integer"
                },
                "sex": {
                    "type": "string",
                    "example": "男"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
